// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetAdopt.Infrastructure;

#nullable disable

namespace PetAdopt.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(PetContext))]
    [Migration("20241005144407_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetAdopt.Domain.Aggregates.NgoAggregate.Ngo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("Alteration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Apresentation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluded")
                        .HasColumnType("bit");

                    b.Property<string>("History")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Inclusion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MainResponsibleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MainResponsibleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserAlteration")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserInclusion")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Ngos");
                });

            modelBuilder.Entity("PetAdopt.Domain.Aggregates.OngAggregate.VolunteersContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("Alteration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluded")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Inclusion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NgoId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid?>("UserAlteration")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserInclusion")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NgoId");

                    b.ToTable("VolunteersContacts");
                });

            modelBuilder.Entity("PetAdopt.Domain.AggregatesModels.AdoptionAggregate.AdoptionForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("AdopterContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AdopterHasOtherPets")
                        .HasColumnType("bit");

                    b.Property<int>("AdopterHouseholdSize")
                        .HasColumnType("int");

                    b.Property<Guid>("AdopterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdopterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Alteration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluded")
                        .HasColumnType("bit");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Inclusion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PetId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ReasonForAdoption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserAlteration")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserInclusion")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("AdoptionForms");
                });

            modelBuilder.Entity("PetAdopt.Domain.AggregatesModels.NgoAggregate.NgoAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("Alteration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluded")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Inclusion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NgoId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid?>("UserAlteration")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserInclusion")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NgoId");

                    b.ToTable("NgoAddresses");
                });

            modelBuilder.Entity("PetAdopt.Domain.AggregatesModels.PetAggregate.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Alteration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Excluded")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSpecialNeeds")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Inclusion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsNeutered")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ResponsibleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Species")
                        .HasColumnType("int");

                    b.Property<int>("StatusPet")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserAlteration")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserInclusion")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("PetAdopt.Domain.AggregatesModels.PetAggregate.PetImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("Alteration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluded")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Inclusion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PetId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid?>("UserAlteration")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserInclusion")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("PetImages");
                });

            modelBuilder.Entity("PetAdopt.Domain.AggregatesModels.PetAggregate.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("Alteration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluded")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Inclusion")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PetId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserAlteration")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserInclusion")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("PetAdopt.Domain.Aggregates.OngAggregate.VolunteersContact", b =>
                {
                    b.HasOne("PetAdopt.Domain.Aggregates.NgoAggregate.Ngo", "Ngo")
                        .WithMany()
                        .HasForeignKey("NgoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PetAdopt.Domain.ValueObjects.ContactVO", "contactVO", b1 =>
                        {
                            b1.Property<Guid>("VolunteersContactId")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("VolunteersContactId");

                            b1.ToTable("VolunteersContacts");

                            b1.WithOwner()
                                .HasForeignKey("VolunteersContactId");
                        });

                    b.Navigation("Ngo");

                    b.Navigation("contactVO")
                        .IsRequired();
                });

            modelBuilder.Entity("PetAdopt.Domain.AggregatesModels.AdoptionAggregate.AdoptionForm", b =>
                {
                    b.HasOne("PetAdopt.Domain.AggregatesModels.PetAggregate.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PetAdopt.Domain.ValueObjects.AddressVO", "addressVO", b1 =>
                        {
                            b1.Property<Guid>("AdoptionFormId")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AdoptionFormId");

                            b1.ToTable("AdoptionForms");

                            b1.WithOwner()
                                .HasForeignKey("AdoptionFormId");
                        });

                    b.Navigation("Pet");

                    b.Navigation("addressVO")
                        .IsRequired();
                });

            modelBuilder.Entity("PetAdopt.Domain.AggregatesModels.NgoAggregate.NgoAddress", b =>
                {
                    b.HasOne("PetAdopt.Domain.Aggregates.NgoAggregate.Ngo", "Ngo")
                        .WithMany()
                        .HasForeignKey("NgoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PetAdopt.Domain.ValueObjects.AddressVO", "addressVO", b1 =>
                        {
                            b1.Property<Guid>("NgoAddressId")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("NgoAddressId");

                            b1.ToTable("NgoAddresses");

                            b1.WithOwner()
                                .HasForeignKey("NgoAddressId");
                        });

                    b.Navigation("Ngo");

                    b.Navigation("addressVO")
                        .IsRequired();
                });

            modelBuilder.Entity("PetAdopt.Domain.AggregatesModels.PetAggregate.PetImage", b =>
                {
                    b.HasOne("PetAdopt.Domain.AggregatesModels.PetAggregate.Pet", null)
                        .WithMany("PetImages")
                        .HasForeignKey("PetId");
                });

            modelBuilder.Entity("PetAdopt.Domain.AggregatesModels.PetAggregate.Tag", b =>
                {
                    b.HasOne("PetAdopt.Domain.AggregatesModels.PetAggregate.Pet", null)
                        .WithMany("Tags")
                        .HasForeignKey("PetId");
                });

            modelBuilder.Entity("PetAdopt.Domain.AggregatesModels.PetAggregate.Pet", b =>
                {
                    b.Navigation("PetImages");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
